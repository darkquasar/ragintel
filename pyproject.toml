[tool]
[tool.poetry]
name = "ragintel"
version = "0.1.0"
homepage = "https://github.com/darkquasar/ragintel"
description = "Repo for testing new hunt and intel ideas with RAG."
authors = ["Diego Perez <darkquasar7@gmail.com>"]
readme = "README.md"
license =  "BSD-3-Clause"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11'
]

packages = [
    { include = "ragintel", from="src" },
    { include = "tests", format = "sdist" }
]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
# poetry = "^1.7.1"
click = "^8.1.7"
pdfplumber = "^0.10.3"
docx = "^0.2.4"
bs4 = "^0.0.1"
types-beautifulsoup4 = "^4.12.0.7"
playwright = "^1.40.0"
html2text = "^2020.1.16"
types-requests = "^2.31.0.20240106"
pyyaml = "^6.0.1"
python-box = "^7.1.1"
loguru = "^0.7.2"

[tool.poetry.scripts]
ragintel = 'ragintel.cli:main'

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"
black  = "^23.12.0"
isort  = "5.10.1"
flake8 = "4.0.1"
flake8-docstrings = "^1.7.0"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
tox = "^3.27.1"
mkdocs = "^1.5.3"
mkdocs-include-markdown-plugin = "^6.0.4"
mkdocs-material = "^9.5.2"
mkdocstrings = "^0.18.0"
mkdocs-material-extensions = "^1.3.1"
twine = "^4.0.2"
mkdocs-autorefs = "^0.3.1"
pre-commit = "^3.6.0"
toml = "^0.10.2"
livereload = "^2.6.3"
mike = "^2.0.0"
mypy = "^1.7.1"
setuptools = "^69.0.2"
pkginfo = "^1.9.6"
virtualenv = "^20.25.0"

[tool.poetry.group.langchain]
optional = true

[tool.poetry.group.langchain.dependencies]
tiktoken = "^0.5.2"
langchain-core = "^0.1.4"
langchain = "^0.0.353"
openai = "^1.6.1"
opensearch-py = "^2.4.2"
langchain-openai = "^0.0.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | \.history
)/
'''

[tool.isort]
src_paths = ["src"]
profile = "black"
